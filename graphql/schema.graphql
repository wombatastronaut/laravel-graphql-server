"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
    users: [User] @all
    user(id: ID @eq): User @find
    userQuery(
        search: String!
        order_column: String
        order_direction: String
    ): [User]

    posts: [Post] @all
    post(id: ID @eq): Post @find

    comments: [Comment] @all
}

type User {
    id: ID!
    name: String!
    email: String!
    posts: [Post] @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

type Post {
    id: ID!
    title: String!
    content: String!
    comments: [Comment] @hasMany
    user: User! @belongsTo
    status:  PostStatus!
    created_at: DateTime!
    updated_at: DateTime!
}

enum PostStatus {
  PENDING @enum(value: 0)
  APPROVED @enum(value: 1)
  REJECTED @enum(value: 2)
}

type Comment {
    id: ID!
    content: String!
    post: Post! @belongsTo
    user: User! @belongsTo 
    created_at: DateTime!
    updated_at: DateTime!
}

type Mutation {
    createPost(
        user_id: ID @rules(apply: ["required"])
        title: String @rules(apply: ["required"])
        content: String @rules(apply: ["required"])
    ): Post @create

    updatePost(
        id: ID @rules(apply: ["required"])
        title: String @rules(apply: ["required"])
        content: String @rules(apply: ["required"])
    ): Post @update

    deletePost(
        id: ID! @rules(apply: ["required"])
    ): Post @delete
}